"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.latin2cyrillic = latin2cyrillic;
exports.cyrillic2latin = cyrillic2latin;
const constants_1 = require("../constants");
function latin2cyrillic(text) {
    var _a;
    let result = [];
    let i = 0;
    while (i < text.length) {
        if (i < text.length - 1 && constants_1.latinToCyrillic[text.substring(i, i + 2)]) {
            result.push(constants_1.latinToCyrillic[text.substring(i, i + 2)]);
            i += 2;
        }
        else {
            result.push((_a = constants_1.latinToCyrillic[text[i]]) !== null && _a !== void 0 ? _a : text[i]);
            i += 1;
        }
    }
    return result.join("");
}
function cyrillic2latin(text) {
    text = handleSpecialCyrillicRulesIfNeeded(text);
    let result = [];
    for (let char of text) {
        result.push(constants_1.cyrillicToLatin[char] || char);
    }
    return result.join("");
}
function handleSpecialCyrillicRulesIfNeeded(text) {
    const specialRulePairs = {
        "ьи": "yi",
        "ьо": "yo",
        "ъе": "ye",
    };
    for (const [cyr, lat] of Object.entries(specialRulePairs)) {
        if (text.includes(cyr) && !text.startsWith(cyr)) {
            text = text.replace(new RegExp(cyr, "g"), lat);
        }
    }
    return text;
}
